//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyInventoryListenerComponent anyInventoryListener { get { return (AnyInventoryListenerComponent)GetComponent(GameComponentsLookup.AnyInventoryListener); } }
    public bool hasAnyInventoryListener { get { return HasComponent(GameComponentsLookup.AnyInventoryListener); } }

    public void AddAnyInventoryListener(System.Collections.Generic.List<IAnyInventoryListener> newValue) {
        var index = GameComponentsLookup.AnyInventoryListener;
        var component = (AnyInventoryListenerComponent)CreateComponent(index, typeof(AnyInventoryListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyInventoryListener(System.Collections.Generic.List<IAnyInventoryListener> newValue) {
        var index = GameComponentsLookup.AnyInventoryListener;
        var component = (AnyInventoryListenerComponent)CreateComponent(index, typeof(AnyInventoryListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyInventoryListener() {
        RemoveComponent(GameComponentsLookup.AnyInventoryListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyInventoryListener;

    public static Entitas.IMatcher<GameEntity> AnyInventoryListener {
        get {
            if (_matcherAnyInventoryListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyInventoryListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyInventoryListener = matcher;
            }

            return _matcherAnyInventoryListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyInventoryListener(IAnyInventoryListener value) {
        var listeners = hasAnyInventoryListener
            ? anyInventoryListener.value
            : new System.Collections.Generic.List<IAnyInventoryListener>();
        listeners.Add(value);
        ReplaceAnyInventoryListener(listeners);
    }

    public void RemoveAnyInventoryListener(IAnyInventoryListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyInventoryListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyInventoryListener();
        } else {
            ReplaceAnyInventoryListener(listeners);
        }
    }
}
