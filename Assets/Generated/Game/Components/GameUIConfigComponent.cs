//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity uIConfigEntity { get { return GetGroup(GameMatcher.UIConfig).GetSingleEntity(); } }
    public UIConfigComponent uIConfig { get { return uIConfigEntity.uIConfig; } }
    public bool hasUIConfig { get { return uIConfigEntity != null; } }

    public GameEntity SetUIConfig(Data.UIConfig newValue) {
        if (hasUIConfig) {
            throw new Entitas.EntitasException("Could not set UIConfig!\n" + this + " already has an entity with UIConfigComponent!",
                "You should check if the context already has a uIConfigEntity before setting it or use context.ReplaceUIConfig().");
        }
        var entity = CreateEntity();
        entity.AddUIConfig(newValue);
        return entity;
    }

    public void ReplaceUIConfig(Data.UIConfig newValue) {
        var entity = uIConfigEntity;
        if (entity == null) {
            entity = SetUIConfig(newValue);
        } else {
            entity.ReplaceUIConfig(newValue);
        }
    }

    public void RemoveUIConfig() {
        uIConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UIConfigComponent uIConfig { get { return (UIConfigComponent)GetComponent(GameComponentsLookup.UIConfig); } }
    public bool hasUIConfig { get { return HasComponent(GameComponentsLookup.UIConfig); } }

    public void AddUIConfig(Data.UIConfig newValue) {
        var index = GameComponentsLookup.UIConfig;
        var component = (UIConfigComponent)CreateComponent(index, typeof(UIConfigComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUIConfig(Data.UIConfig newValue) {
        var index = GameComponentsLookup.UIConfig;
        var component = (UIConfigComponent)CreateComponent(index, typeof(UIConfigComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUIConfig() {
        RemoveComponent(GameComponentsLookup.UIConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUIConfig;

    public static Entitas.IMatcher<GameEntity> UIConfig {
        get {
            if (_matcherUIConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UIConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUIConfig = matcher;
            }

            return _matcherUIConfig;
        }
    }
}
