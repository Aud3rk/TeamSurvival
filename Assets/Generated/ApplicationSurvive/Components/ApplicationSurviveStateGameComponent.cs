//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ApplicationSurviveContext {

    public ApplicationSurviveEntity stateGameEntity { get { return GetGroup(ApplicationSurviveMatcher.StateGame).GetSingleEntity(); } }
    public StateGameComponent stateGame { get { return stateGameEntity.stateGame; } }
    public bool hasStateGame { get { return stateGameEntity != null; } }

    public ApplicationSurviveEntity SetStateGame(GameState.Component.StateGameComponent newValue) {
        if (hasStateGame) {
            throw new Entitas.EntitasException("Could not set StateGame!\n" + this + " already has an entity with StateGameComponent!",
                "You should check if the context already has a stateGameEntity before setting it or use context.ReplaceStateGame().");
        }
        var entity = CreateEntity();
        entity.AddStateGame(newValue);
        return entity;
    }

    public void ReplaceStateGame(GameState.Component.StateGameComponent newValue) {
        var entity = stateGameEntity;
        if (entity == null) {
            entity = SetStateGame(newValue);
        } else {
            entity.ReplaceStateGame(newValue);
        }
    }

    public void RemoveStateGame() {
        stateGameEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ApplicationSurviveEntity {

    public StateGameComponent stateGame { get { return (StateGameComponent)GetComponent(ApplicationSurviveComponentsLookup.StateGame); } }
    public bool hasStateGame { get { return HasComponent(ApplicationSurviveComponentsLookup.StateGame); } }

    public void AddStateGame(GameState.Component.StateGameComponent newValue) {
        var index = ApplicationSurviveComponentsLookup.StateGame;
        var component = (StateGameComponent)CreateComponent(index, typeof(StateGameComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceStateGame(GameState.Component.StateGameComponent newValue) {
        var index = ApplicationSurviveComponentsLookup.StateGame;
        var component = (StateGameComponent)CreateComponent(index, typeof(StateGameComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveStateGame() {
        RemoveComponent(ApplicationSurviveComponentsLookup.StateGame);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ApplicationSurviveMatcher {

    static Entitas.IMatcher<ApplicationSurviveEntity> _matcherStateGame;

    public static Entitas.IMatcher<ApplicationSurviveEntity> StateGame {
        get {
            if (_matcherStateGame == null) {
                var matcher = (Entitas.Matcher<ApplicationSurviveEntity>)Entitas.Matcher<ApplicationSurviveEntity>.AllOf(ApplicationSurviveComponentsLookup.StateGame);
                matcher.componentNames = ApplicationSurviveComponentsLookup.componentNames;
                _matcherStateGame = matcher;
            }

            return _matcherStateGame;
        }
    }
}
