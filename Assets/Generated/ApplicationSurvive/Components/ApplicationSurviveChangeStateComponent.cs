//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ApplicationSurviveEntity {

    public GameState.Component.ChangeStateComponent changeState { get { return (GameState.Component.ChangeStateComponent)GetComponent(ApplicationSurviveComponentsLookup.ChangeState); } }
    public bool hasChangeState { get { return HasComponent(ApplicationSurviveComponentsLookup.ChangeState); } }

    public void AddChangeState(bool newChangeState) {
        var index = ApplicationSurviveComponentsLookup.ChangeState;
        var component = (GameState.Component.ChangeStateComponent)CreateComponent(index, typeof(GameState.Component.ChangeStateComponent));
        component.changeState = newChangeState;
        AddComponent(index, component);
    }

    public void ReplaceChangeState(bool newChangeState) {
        var index = ApplicationSurviveComponentsLookup.ChangeState;
        var component = (GameState.Component.ChangeStateComponent)CreateComponent(index, typeof(GameState.Component.ChangeStateComponent));
        component.changeState = newChangeState;
        ReplaceComponent(index, component);
    }

    public void RemoveChangeState() {
        RemoveComponent(ApplicationSurviveComponentsLookup.ChangeState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ApplicationSurviveMatcher {

    static Entitas.IMatcher<ApplicationSurviveEntity> _matcherChangeState;

    public static Entitas.IMatcher<ApplicationSurviveEntity> ChangeState {
        get {
            if (_matcherChangeState == null) {
                var matcher = (Entitas.Matcher<ApplicationSurviveEntity>)Entitas.Matcher<ApplicationSurviveEntity>.AllOf(ApplicationSurviveComponentsLookup.ChangeState);
                matcher.componentNames = ApplicationSurviveComponentsLookup.componentNames;
                _matcherChangeState = matcher;
            }

            return _matcherChangeState;
        }
    }
}
